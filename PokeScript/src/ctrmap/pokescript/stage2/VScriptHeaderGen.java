
package ctrmap.pokescript.stage2;

import ctrmap.pokescript.InboundDefinition;
import ctrmap.pokescript.stage0.Modifier;
import ctrmap.pokescript.stage0.Preprocessor;
import ctrmap.stdlib.fs.FSUtil;
import ctrmap.stdlib.gui.FormattingUtils;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintStream;
import java.util.logging.Level;
import java.util.logging.Logger;

public class VScriptHeaderGen {
	public static void writeScrHeaderToFile(File file, Preprocessor pp){
		PrintStream sb = null;
		try {
			sb = new PrintStream(file);
			sb.println("/**====================================================================");
			sb.println("*");
			sb.print("*     Script function header for ");
			sb.println(FSUtil.getFileNameWithoutExtension(file.getName()));
			sb.print("*     Rev. ");
			sb.println(FormattingUtils.getCommonFormattedDate());
			sb.println("*");
			sb.println("*     This file was auto-generated by the Pok√©Script compiler.");
			sb.println("*");
			sb.println("=====================================================================*/");
			int idx = 1;
			for (InboundDefinition m : pp.getDeclaredMethods()){
				if (m.hasModifier(Modifier.PUBLIC) && m.hasModifier(Modifier.STATIC) && !m.hasModifier(Modifier.NATIVE)){
					sb.print("static final int ");
					sb.print(m.name);
					sb.print(" = ");
					sb.print(idx);
					sb.println(";");
					idx++;
				}
			}	
		} catch (FileNotFoundException ex) {
			Logger.getLogger(VScriptHeaderGen.class.getName()).log(Level.SEVERE, null, ex);
		} finally {
			sb.close();
		}
	}
}
