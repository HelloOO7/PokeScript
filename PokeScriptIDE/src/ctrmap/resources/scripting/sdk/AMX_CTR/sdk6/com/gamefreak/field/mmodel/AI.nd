/**
*	Creates heap space and loads the specified AI into it.
*
*	@param AIid The integer representation of the AI class.
*
*	@throws AIException if the AI is already loaded.
*	@throws IllegalArgumentException if the AIid is invalid.
*/
native void AILoad(int AIid);

/**
*	Checks if the current AI load sequence (requested by ref:/com.gamefreak.ai.AI.AIload(int AIid)) has finished.
*
*	@return true if the sequence has finished
*			false if otherwise
*/
native boolean AIIsLoaded();

/**
*	Sets up a selected NPC with an AI. The AI must be loaded beforehand.
*
*	@param AIid The integer representation of the AI class.
*	@param targetUnit Global MoveModel ID for the AI to target.
*	@param arg3
*
*	@throws AIException if the AI is not loaded. (see ref:/com.gamefreak.ai.AI.AIIsLoaded())
*	@throws IllegalArgumentException if the AIid is invalid or the targetUnit does not exist.
*/
native void AICreate(int AIid, int targetUnit, int arg3);

/**
*	Checks if the given AI is loaded and is currently controlling a MoveModel.
*	
*	@param AIid The integer representation of the AI class.
*	
*	@return true if the AI is loaded and assigned to a MoveModel
*			false if otherwise
*
*	@throws IllegalArgumentException if the AIid is invalid.
*/
native boolean AIIsAlive(int AIid);

/**
*	Decouples the given AI from its assigned MoveModel.
*
*	@param AIid The integer representation of the AI class.
*
*	@throws AIException if the AI is not alive. (see ref:/com.gamefreak.ai.AI.AIIsAlive(int AIid))
*	@throws IllegalArgumentException if the AIid is invalid.
*/
native void AIDelete(int AIid);