package ctrmap.pokescript.ide.autocomplete.gui;

import ctrmap.pokescript.stage0.Modifier;
import ctrmap.pokescript.stage0.NMember;
import ctrmap.pokescript.ide.autocomplete.nodes.AbstractNode;
import ctrmap.pokescript.ide.autocomplete.nodes.ClassNode;
import ctrmap.pokescript.ide.autocomplete.nodes.MemberNode;
import ctrmap.pokescript.ide.autocomplete.nodes.PackageNode;
import ctrmap.stdlib.res.ResourceAccess;
import java.awt.Dimension;
import javax.swing.ImageIcon;

public class ACHintPanel extends javax.swing.JPanel {
	
	private static final ImageIcon ICN_FIELD = createScrUiImageIcon("field");
	private static final ImageIcon ICN_PKG = createScrUiImageIcon("package");
	private static final ImageIcon ICN_CLASS = createScrUiImageIcon("class");
	private static final ImageIcon ICN_METHOD = createScrUiImageIcon("method");

	public ACHintPanel(AbstractNode node) {
		initComponents();
		
		memberName.setIcon(getIconResourceForNode(node));
		memberName.setText(node.getPrintableShortName());
		
		int prefX = Math.min(450, memberName.getPreferredSize().width);
		memberName.setPreferredSize(new Dimension(prefX, memberName.getPreferredSize().height));
		
		if (node instanceof MemberNode){
			type.setText(((MemberNode) node).member.type.toString().toLowerCase());
		}
		else {
			type.setText(null);
		}
	}

	private static ImageIcon getIconResourceForNode(AbstractNode n) {
		if (n instanceof PackageNode) {
			return ICN_PKG;
		} else if (n instanceof ClassNode) {
			return ICN_CLASS;
		} else if (n instanceof MemberNode) {
			NMember m = ((MemberNode) n).member;
			if (m.hasModifier(Modifier.VARIABLE)) {
				return ICN_FIELD;
			} else {
				return ICN_METHOD;
			}
		}
		return ICN_PKG;
	}
	
	private static ImageIcon createScrUiImageIcon(String name){
		return new ImageIcon(ResourceAccess.getByteArray("scripting/ui/" + name + ".png"));
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        memberName = new javax.swing.JLabel();
        type = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        memberName.setText("MemberName");
        memberName.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 2, 0, 0));
        add(memberName, java.awt.BorderLayout.WEST);

        type.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        type.setText("type");
        type.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 10, 0, 2));
        type.setName(""); // NOI18N
        add(type, java.awt.BorderLayout.EAST);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel memberName;
    private javax.swing.JLabel type;
    // End of variables declaration//GEN-END:variables
}
